name: Deploy to Kubernetes with AWS ECR

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Configure AWS CLI
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to AWS ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    # Step 4: Build and Push Docker Image
    - name: Build and Push to ECR
      run: |
        ECR_URI=123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-kubernative
        docker build -t $ECR_URI:latest .
        docker push $ECR_URI:latest

    # Step 5: Set up kubectl
    - name: Set up kubectl
      run: |
        mkdir -p ~/.kube  # Create the .kube directory
        echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > ~/.kube/config  # Decode kubeconfig
        kubectl cluster-info  # Verify kubectl can connect to the cluster

    # Step 6: Deploy Kubernetes Manifests
    - name: Deploy Kubernetes Manifests
      run: |
        ECR_URI=123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/node-kubernative
        sed -i "s|<your-dockerhub-username>/node-kubernative:latest|$ECR_URI:latest|g" k8s-manifests/deployment.yaml
        kubectl apply -f k8s-manifests/deployment.yaml
        kubectl apply -f k8s-manifests/service.yaml

    # Step 7: Verify Deployment
    - name: Check Deployment Status
      run: |
        kubectl get pods
        kubectl get services
